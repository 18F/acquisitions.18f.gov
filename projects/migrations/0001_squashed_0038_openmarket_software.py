# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-08 15:03
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('projects', '0001_initial'), ('projects', '0002_project_active'), ('projects', '0003_auto_20161101_1600'), ('projects', '0004_auto_20161105_1743'), ('projects', '0005_auto_20161105_1846'), ('projects', '0006_auto_20161109_2022'), ('projects', '0007_buy'), ('projects', '0008_auto_20161118_0405'), ('projects', '0009_auto_20161118_1510'), ('projects', '0010_auto_20161122_0420'), ('projects', '0011_auto_20161122_1639'), ('projects', '0012_project_dollars'), ('projects', '0013_buy_procurement_method'), ('projects', '0014_buy_contractual_history'), ('projects', '0015_buy_rfq_id'), ('projects', '0016_auto_20161122_2318'), ('projects', '0017_auto_20161122_2334'), ('projects', '0018_auto_20161123_0106'), ('projects', '0019_auto_20161123_0152'), ('projects', '0020_auto_20161123_0322'), ('projects', '0021_auto_20161123_0410'), ('projects', '0022_auto_20161123_0415'), ('projects', '0023_buy_github_repository'), ('projects', '0024_auto_20161129_0356'), ('projects', '0025_auto_20161129_0600'), ('projects', '0026_buy_locked'), ('projects', '0024_buy_market_research'), ('projects', '0027_merge_20161130_0556'), ('projects', '0028_auto_20161201_1655'), ('projects', '0029_auto_20161201_1657'), ('projects', '0030_auto_20161201_2246'), ('projects', '0031_project_team_members'), ('projects', '0032_auto_20161202_1716'), ('projects', '0033_buy_technical_evaluation_panel'), ('projects', '0034_auto_20161204_1531'), ('projects', '0035_auto_20161207_0303'), ('projects', '0036_auto_20161207_0329'), ('projects', '0037_micropurchase_procurement_method'), ('projects', '0038_openmarket_software')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IAA',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('client', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('project_type', models.CharField(choices=[('Internal Buy', 'Internal Buy'), ('External Buy', 'External Buy'), ('Consulting', 'Consulting')], max_length=100)),
                ('public', models.BooleanField(default=False)),
                ('iaa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.IAA')),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField(default='hello this is description')),
            ],
        ),
        migrations.AddField(
            model_name='iaa',
            name='authority',
            field=models.CharField(blank=True, choices=[('ASF', 'Alternating Services Fund'), ('Economy', 'Economy Act')], max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='iaa',
            name='dollars',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='iaa',
            name='expires_on',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='iaa',
            name='signed_on',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'permissions': (('view_private', 'Can view non-public projects'),)},
        ),
        migrations.AddField(
            model_name='project',
            name='dollars',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='ContractingOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('program_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterModelOptions(
            name='iaa',
            options={'verbose_name': 'IAA'},
        ),
        migrations.CreateModel(
            name='ContractingOfficer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.ContractingOffice')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContractingSpecialist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.ContractingOffice')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContractingOfficerRepresentative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.ContractingOffice')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AgencyOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Agency')),
            ],
        ),
        migrations.AlterField(
            model_name='contractingoffice',
            name='program_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='iaa',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.AgencyOffice'),
        ),
        migrations.AlterUniqueTogether(
            name='agencyoffice',
            unique_together=set([('name', 'agency')]),
        ),
        migrations.AlterModelOptions(
            name='agency',
            options={'ordering': ['name'], 'verbose_name_plural': 'Agencies'},
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'permissions': (('view_project', 'Can view non-public projects'), ('sign_nda', 'Can sign an NDA, either blanket or specific'))},
        ),
        migrations.AddField(
            model_name='project',
            name='team_members',
            field=models.ManyToManyField(help_text='You may select from users who have signed the blanket NDA.', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AgileBPA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('dollars', models.PositiveIntegerField(null=True)),
                ('public', models.BooleanField(default=False)),
                ('contractual_history', models.TextField(default='This is the first contract for this functionality.')),
                ('base_period_length', models.CharField(blank=True, max_length=100, null=True)),
                ('option_periods', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('option_period_length', models.CharField(blank=True, max_length=100, null=True)),
                ('procurement_method', models.CharField(default='Agile Development Services BPA Order', editable=False, max_length=200)),
                ('set_aside_status', models.CharField(blank=True, choices=[('AbilityOne', 'AbilityOne'), ('HUBZone Small Business', 'HUBZone Small Business'), ('Multiple Small Business Categories', 'Multiple Small Business Categories'), ('Other Than Small', 'Other Than Small'), ('Service Disabled Veteran-owned Small Business', 'Service Disabled Veteran-owned Small Business'), ('Small Business', 'Small Business'), ('Small Disadvantaged Business (includes Section 8a)', 'Small Disadvantaged Business (includes Section 8a)'), ('Veteran-Owned Small Business', 'Veteran-Owned Small Business'), ('Woman-Owned Small Business', 'Woman-Owned Small Business')], max_length=200, null=True, verbose_name='Set-aside Status')),
                ('rfq_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='RFQ ID')),
                ('github_repository', models.URLField(blank=True, null=True)),
                ('locked', models.BooleanField(default=False)),
                ('qasp', models.TextField(blank=True, null=True, verbose_name='QASP')),
                ('acquisition_plan', models.TextField(blank=True, null=True)),
                ('market_research', models.TextField(blank=True, null=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('award_date', models.DateField(blank=True, null=True)),
                ('contracting_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.ContractingOffice')),
                ('contracting_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.ContractingOfficer')),
                ('contracting_officer_representative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.ContractingOfficerRepresentative')),
                ('contracting_specialist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.ContractingSpecialist')),
                ('nda_signed', models.ManyToManyField(blank=True, related_name='ndas', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buys', to='projects.Project')),
                ('technical_evaluation_panel', models.ManyToManyField(blank=True, related_name='panels', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterModelOptions(
            name='agencyoffice',
            options={'ordering': ['agency', 'name']},
        ),
        migrations.CreateModel(
            name='Micropurchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('dollars', models.PositiveIntegerField(null=True)),
                ('public', models.BooleanField(default=False)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('award_date', models.DateField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='micropurchase', to='projects.Project')),
                ('procurement_method', models.CharField(default='Micro-purchase', editable=False, max_length=200)),
            ],
            options={
                'verbose_name': 'Micro-purchase',
            },
        ),
        migrations.AlterModelOptions(
            name='agilebpa',
            options={'verbose_name': 'Agile BPA Order'},
        ),
        migrations.AlterField(
            model_name='agilebpa',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agilebpa', to='projects.Project'),
        ),
        migrations.CreateModel(
            name='OpenMarket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('dollars', models.PositiveIntegerField(null=True)),
                ('public', models.BooleanField(default=False)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('award_date', models.DateField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='openmarket', to='projects.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('dollars', models.PositiveIntegerField(null=True)),
                ('public', models.BooleanField(default=False)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('award_date', models.DateField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='software', to='projects.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
